import React, {useContext, useEffect, useState} from "react";
import {Link} from "react-router-dom";

import Layout from 'conteiners/layout';
import Sidebar from 'components/sidebar';
import Banner from 'components/banner';
import {CurrentBasketContext} from 'contexts/currentBasket'
import {CurrentSearchContext} from 'contexts/currentSearch'
import {addProductToBasket, filterProductsSearch, getIds} from 'utils'
import useFetch from 'hooks/useFetch'
import {CLEAR_SAERCH} from 'actionTypes'
import useLocalStorage from 'hooks/useLocalStorage'
import {useToasts} from "react-toast-notifications";


const Products  = props => {
    const [currentSearchState, ] = useContext(CurrentSearchContext)
    const isAllProducts = ((props.match.path === '/')   || (currentSearchState !== '')) ;
    const apiUrl = isAllProducts ? '/rest/products' : `/rest/products/categories/${props.match.params.id}`
    const [{response, isLoading}, doFetch] = useFetch(apiUrl);
    const [products, setProducts] = useState([]);
    const [currentBasketState, dispatch] = useContext(CurrentBasketContext)
    const [, setProd] = useLocalStorage('productsIds')
    const { addToast } = useToasts()

    useEffect(() => {
        doFetch()
    }, [doFetch, apiUrl])

    useEffect(()=>{
        if(!response){
            return
        }
        const filterProducts = filterProductsSearch(currentSearchState, response)
        setProducts(filterProducts)
    }, [response, currentSearchState, isAllProducts])

    useEffect(()=>{
        dispatch({type: CLEAR_SAERCH})
    }, [dispatch])

    useEffect(event => {
        if(currentBasketState.length === 0){
            return
        }
        setProd(getIds(currentBasketState))
    }, [currentBasketState, setProd])

    const renderProduct = (product, index) => {
        return (

            <div className="col-xs-6 col-sm-4 col-md-4 col-lg-3 product-item" key={index}>
                <div className="product-images">
                    <Link to={`/products/${product.id}`} className="hover-images effect">
                        <img src={product.image} alt='' className="img-reponsive"/>
                    </Link>
                    <Link to="#" className="btn-add-wishlist ver2"><i className="icon-heart"></i></Link>
                    <Link to={`/products/${product.id}`} className="btn-quickview">Быстрый просмотр</Link>
                </div>
                <div className="product-info-ver2">
                    <h3 className="product-title" style={{textAlign: "center", fontWeight: "bold"}}>
                        <Link to={`/products/${product.id}`}>{product.name}</Link>
                    </h3>
                    <div className="product-after-switch">
                        <div className="product-price-default" style={{textAlign: "center", fontWeight: "bolder"}}>{product.price} рублей</div>
                    </div>
                        <a className="btn link-button hover-black update"  onClick={() => {
                            addToast("Продукт добавлен в корзину", {
                                appearance: 'success',
                                autoDismiss: true,})
                            addProductToBasket(product, dispatch)}}>Купить</a>
                    <p className="product-desc">Compellingly brand enterprise value after
                        functional manufactured products. Synergistically morph process-centric
                        intellectual capital rather than extensible catalysts for change.
                        Credibly aggregate progressive initiatives and long-term.</p>
                    <div className="product-price">{product.price}</div>
                </div>
            </div>

        )
    }

    return (

        <Layout>
            <Banner/>
                <div className="container container-42 shop-sidebar">
                    <div className="row">
                        <Sidebar/>
                    <div className="col-md-9 col-sm-9 collection-list">
                      <div className="product-standard product-grid">
                        <div className="tab-content">
                            <div id="all" className="tab-pane fade in active">
                                <div className="row">
                                    {!isLoading && products.map((product, index) => renderProduct(product, index))}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                    </div>
                </div>

            </Layout>
        )
    }

export default Products
