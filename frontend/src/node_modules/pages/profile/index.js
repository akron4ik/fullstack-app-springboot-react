import React, {useContext, useState, useEffect} from "react";
import Layout from "conteiners/layout";

import {CurrentUserContext} from 'contexts/currentUser'
import useFetch from 'hooks/useFetch'
import {useFormik} from "formik";
import {validate} from "../../validation";
import {Redirect} from "react-router-dom";
import {useToasts} from "react-toast-notifications";

/**
 * Страница Редактирования Профиля
 */
const Profile = () => {

    const apiUrl = '/rest/user'
    const [currentUserState, dispatch] = useContext(CurrentUserContext)
    const [{response}, doFetch] = useFetch(apiUrl)
    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)
    const { addToast } = useToasts()
    const [count, setCount] = useState(0)
    const formik = useFormik({
        initialValues: {
            name: currentUserState.currentUser ? currentUserState.currentUser.username : '',
            surname: currentUserState.currentUser ? currentUserState.currentUser.surname : '',
            organization: currentUserState.currentUser ? currentUserState.currentUser.organization : '',
            address: currentUserState.currentUser ? currentUserState.currentUser.address : '',
            phone: currentUserState.currentUser ? currentUserState.currentUser.phone : '',
            email: currentUserState.currentUser ? currentUserState.currentUser.email : '',
            password: '',
        },
        validateOnChange: false,
        onSubmit:  values => {
            setCount(count + 1)
            if(count !== 1){
                return
            }
            doFetch({
                method: 'put',
                data: {
                    ...currentUserState.currentUser,
                    id: currentUserState.currentUser.id,
                    username: values.name,
                    surname: values.surname,
                    organization: values.organization,
                    address: values.address,
                    phone: values.phone,
                    email: values.email,
                    password: values.password
                }
            })
        },
        validate: values => {
            let errors =  validate(values, false)
            return errors;
        },



    });

    useEffect(()=>{
        if(!response){
            return
        }
        addToast("Операция прошла успешно!",
            {appearance: 'success',
                autoDismiss: true,})
        setIsSuccessfullSubmit(true)
        dispatch({type: 'SET_AUTHORIZED', payload: response})
    }, [response, dispatch])

    if(isSuccessfullSubmit){
        return  <Redirect to='/'/>
    }

    return (

        <Layout>
            <div className="container">
                <div className="row">
                    <div className="col-xs-12 col-sm-12">
                        <div className="customer-page">
                            <hr/>
                            <div className="title-page">
                                <h3>Ваш профиль</h3>
                            </div>

                            <form className="form-customer form-login" onSubmit={formik.handleSubmit}>
                                <div className="form-group">
                                    <label>Имя *</label>
                                    <input
                                        name="name"
                                        type="text"
                                        className="form-control form-account"
                                        placeholder="имя"
                                        value={formik.values.name}
                                        onChange={formik.handleChange}
                                    >
                                    </input>
                                    {formik.errors.name &&
                                      <div className="error-msg">
                                        {formik.errors.name}
                                      </div>
                                    }
                                </div>
                                <div className="form-group">
                                    <label>Фамилия *</label>
                                    <input
                                        name="surname"
                                        type="text"
                                        className="form-control form-account"
                                        placeholder='фамилия'
                                        value={formik.values.surname}
                                        onChange={formik.handleChange}
                                    />
                                    {formik.errors.surname &&
                                      <div className="error-msg">
                                        {formik.errors.surname}
                                      </div>
                                    }
                                </div>
                                <div className="form-group">
                                    <label>Организация</label>
                                    <input
                                        name="organization"
                                        type="text"
                                        className="form-control form-account"
                                        placeholder='организация'
                                        value={formik.values.organization}
                                        onChange={formik.handleChange}
                                    />
                                </div>
                                 <div className="form-group">
                                    <label htmlFor="exampleInputEmail1">Адрес *</label>
                                    <input
                                        name="address"
                                        type="text"
                                        className="form-control form-account"
                                        placeholder='адрес'
                                        value={formik.values.address}
                                        onChange={formik.handleChange}
                                    />
                                    {formik.errors.address &&
                                      <div className="error-msg">
                                        {formik.errors.address}
                                      </div>
                                    }
                                </div>

                                <div className="form-group">
                                    <label htmlFor="exampleInputEmail1">Телефон *</label>
                                    <input
                                        name="phone"
                                        type="text"
                                        className="form-control form-account"
                                        value={formik.values.phone}
                                        onChange={formik.handleChange}
                                        placeholder="телефон"
                                    />
                                    {formik.errors.phone &&
                                    <div className="error-msg">
                                        {formik.errors.phone}
                                    </div>
                                    }
                                </div>

                                <div className="form-group">
                                    <label htmlFor="exampleInputEmail1">Почта *</label>
                                    <input
                                        name="email"
                                        type="email"
                                        className="form-control form-account"
                                        placeholder='почта'
                                        value={formik.values.email}
                                        onChange={formik.handleChange}
                                    />
                                    {formik.errors.email &&
                                    <div className="error-msg">
                                        {formik.errors.email}
                                    </div>
                                    }
                                </div>
                                <div className="form-group">
                                    <label htmlFor="exampleInputPassword1">Пароль *</label>
                                    <input
                                        name="password"
                                        type="password"
                                        className="form-control form-account"
                                        placeholder='пароль'
                                        value={formik.values.password}
                                        onChange={formik.handleChange}
                                    />
                                    {formik.errors.password &&
                                    <div className="error-msg">
                                        {formik.errors.password}
                                    </div>
                                    }
                                </div>
                                <button type="submit" className="btn link-button hover-white" >Обновить мои данные</button>
                            </form>

                        </div>
                    </div>
                </div>
            </div>
        </Layout>
    )



    /*const handleSubmit = event => {
        event.preventDefault()
        doFetch({
            method: 'put',
            data: {
                ...currentUserState.currentUser,
                id: currentUserState.currentUser.id,
                username,
                surname,
                organization,
                address,
                phone,
                email,
                password
            }
        })
    }

    useEffect(()=>{
        if (!currentUserState.currentUser){
            return
        }
        setAddress(currentUserState.currentUser.address)
        setUsername(currentUserState.currentUser.username)
        setSurname(currentUserState.currentUser.surname)
        setOrganization(currentUserState.currentUser.organization)
        setEmail(currentUserState.currentUser.email)
        setPhone(currentUserState.currentUser.phone)
    }, [currentUserState.currentUser])

    useEffect(()=>{
        if(!response){
            return
        }
        dispatch({type: 'SET_AUTHORIZED', payload: response})
    }, [response, dispatch])

    return (
        <Layout>
            <div className="container">
                <div className="row">
                    <div className="col-xs-12 col-sm-12">
                        <div className="customer-page">
                            <hr/>
                            <div className="title-page">
                                <h3>Ваш профиль</h3>
                            </div>
                            <form className="form-customer form-login" onSubmit={handleSubmit}>
                                <div className="form-group">
                                    <label>Имя *</label>
                                    <input
                                        type="text"
                                        className="form-control form-account"
                                        placeholder='Имя'
                                        value={username}
                                        onChange={e => setUsername(e.target.value)}
                                    />
                                </div>
                                <div className="form-group">
                                    <label>Фамилия *</label>
                                    <input
                                        type="text"
                                        className="form-control form-account"
                                        placeholder='Фамилия'
                                        value={surname}
                                        onChange={e => setSurname(e.target.value)}
                                    />
                                </div>
                                <div className="form-group">
                                    <label>Название Организации </label>
                                    <input
                                        type="text"
                                        className="form-control form-account"
                                        placeholder='Название организации'
                                        value={organization}
                                        onChange={e => setOrganization(e.target.value)}
                                    />
                                </div>
                                <div className="form-group">
                                    <label htmlFor="exampleInputEmail1">Адрес *</label>
                                    <input
                                        type="text"
                                        className="form-control form-account"
                                        placeholder='Адрес'
                                        value={address}
                                        onChange={e => setAddress(e.target.value)}
                                    />
                                </div>

                                <div className="form-group">
                                    <label htmlFor="exampleInputEmail1">Телефон *</label>
                                    <input
                                        type="text"
                                        className="form-control form-account"
                                        placeholder='Телефон'
                                        value={phone}
                                        onChange={e => setPhone(e.target.value)}
                                    />
                                </div>

                                <div className="form-group">
                                    <label htmlFor="exampleInputEmail1">Почта *</label>
                                    <input
                                        type="email"
                                        className="form-control form-account"
                                        placeholder='Почта'
                                        value={email}
                                        onChange={e => setEmail(e.target.value)}
                                    />
                                </div>
                                <div className="form-group">
                                    <label htmlFor="exampleInputPassword1">Пароль *</label>
                                    <input
                                        type="password"
                                        className="form-control form-account"
                                        placeholder='Пароль'
                                        value={password}
                                        onChange={e => setPassword(e.target.value)}
                                    />
                                </div>
                                <div className="form-check">
                                    <button type="submit" className="btn-login hover-white">Обновить</button>
                                </div>
                            </form>
                            <span className="divider"></span>
                        </div>
                    </div>
                </div>
            </div>
        </Layout>
    )*/
}

export default Profile