import React, {createContext, useReducer} from "react";
import {ADD_PRODUCT_TO_BASKET, CLEAN_BASKET, REMOVE_ITEM_FROM_BASKET, REMOVE_PRODUCT_FROM_BASKET, ADD_ALL_TO_BASKET} from "../actionTypes";
import * as R from "ramda";

const initialState = []

const reducer = (state, {type, payload}) => {
    switch (type) {
        case ADD_PRODUCT_TO_BASKET:
            return R.append(payload, state);
        case REMOVE_PRODUCT_FROM_BASKET:
            return R.without(R.of(payload), state);
        case REMOVE_ITEM_FROM_BASKET:
            const index = state.indexOf(payload);
            return R.remove(index, 1, state);
        case CLEAN_BASKET:
            return state = initialState;
        case ADD_ALL_TO_BASKET:
            return state = payload;
        default:
            return state

    }
}

export const CurrentBasketContext = createContext()

export const CurrentBasketProvider = ({children}) => {
    const value = useReducer(reducer, initialState)

    return (
        <CurrentBasketContext.Provider value={value}>
            {children}
        </CurrentBasketContext.Provider>
    )
}